
      Question 1

Download the text file here
<https://d396qusza40orc.cloudfront.net/algo1%2Fprogramming_prob%2F2sum.txt>.
(Right click and save link as).

The goal of this problem is to implement a variant of the 2-SUM
algorithm (covered in the Week 6 lecture on hash table applications).

The file contains 1 million integers, both positive and negative (there
might be some repetitions!).This is your array of integers, with the
ithrow of the file specifying the ithentry of the array.

Your task is to compute the number of target values tin the interval
[-10000,10000] (inclusive) such that there are /distinct/ numbers x,yin
the input file that satisfy x+y=t. (NOTE: ensuring distinctness requires
a one-line addition to the algorithm from lecture.)

Write your numeric answer (an integer between 0 and 20001) in the space
provided.

OPTIONAL CHALLENGE: If this problem is too easy for you, try
implementing your own hash table for it. For example, you could compare
performance under the chaining and open addressing approaches to
resolving collisions.

Answer for Question 1
*You entered:*
427
Your Answer 		Score 	Explanation
427 	Correct 	2.00 	
Total 		2.00 / 2.00 	


      Question 2

Download the text file here
<http://spark-public.s3.amazonaws.com/algo1/programming_prob/Median.txt>.

The goal of this problem is to implement the "Median Maintenance"
algorithm (covered in the Week 5 lecture on heap applications). The text
file contains a list of the integers from 1 to 10000 in unsorted order;
you should treat this as a stream of numbers, arriving one by one.
Letting xidenote the ith number of the file, the kth median mkis defined
as the median of the numbers x1,…,xk. (So, if kis odd, then mkis
((k+1)/2)th smallest number among x1,…,xk; if kis even, then mkis the
(k/2)th smallest number among x1,…,xk.)

In the box below you should type the sum of these 10000 medians, modulo
10000 (i.e., only the last 4 digits). That is, you should compute
(m1+m2+m3+⋯+m10000)mod10000.

OPTIONAL EXERCISE: Compare the performance achieved by heap-based and
search-tree-based implementations of the algorithm.
Answer for Question 2
*You entered:*
1213
Your Answer 		Score 	Explanation
1213 	Correct 	3.00 	
Total 		3.00 / 3.00 	

